Ajax call with JQuery

---- JQuery Ajax GET request ----

Passing query parameters as an object

$.get('https://api.example.com/data',
{key1: value1, key2: value2},
(data)=>{
    // callback function to handle response
    console.log("data");
})
.fail(()=>{
    console.log("Problem with GET request");
});


Passing query parameters directly in the URL

$.get('https://api.example.com/data?key1=value1&key2=value2',
(data)=>{
    console.log(data);
})
.fail(()=>{
    console.log("Problem with GET request");
});


---- JQuery Ajax POST Request ----

BASIC---

$.post('https://api.example.com/data',
{key1: 'value1', key2: 'value2'},
(data)=>{
    console.log(data); // data object to be sent to the server
})
.fail(()=>{
    console.log("Problem with POST request");
});

ADVANCED---

$.post({
    url: 'https://api.example.com/data', // URL of the resource
    data: JSON.stringify({ key1: 'value1', key2: 'value2' }), // Data to be sent to the server
    contentType: 'application/json', // Content type of the request being sent to the server
    success: function(data) {
        // Callback function to handle a successful response
        console.log(data);
    },
    error: function(jqXHR, textStatus, errorThrown) {
        // Callback function to handle an error response
        console.error('There was a problem with the POST request:', textStatus, errorThrown); // Log the error
    }
});


